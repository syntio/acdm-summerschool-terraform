steps:
# Access the id_github file from Secret Manager.
- id: 'get secret'
  name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [ '-c', 'gcloud secrets versions access latest --secret=karlotestkey > /root/.ssh/id_github' ]
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain.
- id: 'setup git'
  name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_github
    cat <<EOF >/root/.ssh/config
    Hostname bitbucket.org
    IdentityFile /root/.ssh/id_github
    EOF
    ssh-keyscan -t rsa bitbucket.org > /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Connect to the repository.
- id: 'connect to repo'
  name: 'gcr.io/cloud-builders/git'
  args:
  - clone
  - git@bitbucket.org:syntio/terraform-definition.git
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Print branch name.
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      echo "***************************"
      echo "Branch name = $branch"
      echo "***************************"
# Terraform init.
- id: 'tf init'
  name: 'hashicorp/terraform:0.12.28'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        terraform init
      else
        echo "***********************************"
        echo "Branch $BRANCH_NAME is not a configuration branch."
        echo "Skipping init step!"
        echo "***********************************"
      fi
# Terraform plan.
- id: 'tf plan'
  name: 'hashicorp/terraform:0.12.28'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    if [ -d "environments/$BRANCH_NAME/" ]; then
            cd environments/$BRANCH_NAME
            terraform plan
          else
        echo "***********************************"
        echo "Branch $BRANCH_NAME is not a configuration branch."
        echo "Skipping plan step!"
        echo "***********************************"
          fi
# Terraform apply.
- id: 'tf apply'
  name: 'hashicorp/terraform:0.12.28'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        terraform apply -auto-approve
      else
        echo "***********************************"
        echo "Branch $BRANCH_NAME is not a configuration branch."
        echo "Skipping apply step!"
        echo "***********************************"
      fi